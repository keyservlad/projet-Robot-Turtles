tortue --> main, defausse, deck, programme

ListeDeCarte -> main, defausse, deck, programme
-> carte (type, ) (action quand elle est invoquée, )

-> cartes : bleues, jaune, violette, laser

il faudra set des tailles max pour eviter d'avoir des trop gros board



bug : dans le choix du type de mur (on peut choisir un mur meme s'il n'est pas affiche - ce pb ne sera plus quand on fera une IG donc osef)


utiliser le type color au lieu de String
au lieu de supprimer la tortue du joueur quand il gagne, il faut mettre une condition dans le corps du programme qui fait que quand la boucle va passer sur son  tour ca ne fera rien
regles a implementer: on ne peut pas se deplacer ni poser de mur aux cases initiales (leur attribué le char 'S' peut etre quand la case est vide et afficher une tortue transparente
on ne peux pas encerler un joueur un joyaux ni un spawn

si on veut changer la couleur d'une tuile:
dans le TilePanel():
assignTileColor dans le constructeur, puis faire un setBackground(lightTileColor);

peut etre faire comme lui avec une enum de toutes les tuiles (tres propre)




dans le update plateau, mettre les images des tortues transparentes avant d'afficher les tortues pour permettre de savoir ou sont les spawns

pour le menu : https://www.youtube.com/watch?v=urye2D3_mss&list=PLWms45O3n--6TvZmtFHaCWRZwEqnz2MHa&index=9

menu 2048 : https://www.youtube.com/watch?v=5kZF9qJY-9k

drag and drop (video pas ouf) : https://www.youtube.com/watch?v=HYqODAQ2lQw	(on a fait la méthode openclassroom tout en bas de la page)



les etats de la game : 
- choix nombre joueurs + limite de score
- joueur 1:
	- choix de l'action à effectuer (jouer carte, invoquer, placer mur)
	- jouer carte (place autant de carte qu'il le désire, bouton fin de tour apparait au bout d'une carte, il devient vert quand le board est plein ou quand la main est vide)
	- invoquer (juste le bouton fin de tour qui apparait en vert, invoque les carte une par une dans l'ordre -montrer la carte en gros pendant une seconde à chaque fois qu'elle est invoquée)
	- placer un mur (activation du mouselistener sur les tilePanel, apparition du bouton fin de tour en vert quand le mur est placé)
	
- joueur 2:
	- idem
	
- fin de partie


--> pour la suite : 
	on va utiliser les drawPanel pour afficher les panels selon l'etat de la game
	
	
amelioration : fusionner les classer Fenetre menu et FenetreJeu avec un removeall() puis affichage de la fenetre correspondante, à faire dans une méthode et non plus dans le constructeur

TODO next : faire les tours des joueurs avec l'enum, puis ajouter les boutons dans le buttonPanel, ajouter les etapes d'un tour dans l'enum, la differentiation entre les joueur se fera au moment de draw grace à la variable tourDuJoueur